swagger: "2.0"
info:
  title: api-sirel
  description: Documentation for api-sirel
  version: 1.0.0
  contact:
    email: di@upr.edu.cu
  license:
    name: UPR
basePath: /api
paths:
  /admin/area:
    get:
      tags:
      - admin
      description: Get area info by id (role admin required)
      operationId: AdminAreasController.Retrieve Area Info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: area_id
        description: Area id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Area'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    post:
      tags:
      - admin
      description: Create new area (role admin required)
      operationId: AdminAreasController.Create new area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: body
        name: area
        description: New Area
        required: true
        schema:
          $ref: '#/definitions/models.Area'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Area'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      tags:
      - admin
      description: Remove area by id (role admin required)
      operationId: AdminAreasController.Delete Area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: area_id
        description: Area id
        required: true
        type: string
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    patch:
      tags:
      - admin
      description: Edit area (role admin required)
      operationId: AdminAreasController.Update Area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: area_id
        description: Area id
        required: true
        type: integer
        format: int64
      - in: body
        name: area
        description: Edited Area
        required: true
        schema:
          $ref: '#/definitions/models.Area'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Area'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/area/admins:
    get:
      tags:
      - admin
      description: Delete user from admins by id (role admin required)
      operationId: AdminAreasController.Get Admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: area_id
        description: Area id
        required: true
        type: string
      responses:
        "200":
          description: '{[]models.UserPublicInfo}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    put:
      tags:
      - admin
      description: Delete user from admins by id (role admin required)
      operationId: AdminAreasController.Delete User from Admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: area_id
        description: Area id
        required: true
        type: integer
        format: int64
      - in: query
        name: user_id
        description: User id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      tags:
      - admin
      description: Delete user from admins by id (role admin required)
      operationId: AdminAreasController.Delete User from Admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: area_id
        description: Area id
        required: true
        type: string
      - in: query
        name: user_id
        description: User id
        required: true
        type: string
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/areas:
    get:
      tags:
      - admin
      description: Get areas list (role admin required)
      operationId: AdminAreasController.Get Areas List
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: orderDirection
        description: asc or desc
        type: string
      - in: query
        name: search
        description: Search in name
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Area'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/local:
    get:
      tags:
      - admin
      description: Get local info by id (role admin required)
      operationId: AdminLocalsController.Retrieve Local Info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: local_id
        description: Local id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Local'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    post:
      tags:
      - admin
      description: Create new local (role admin required)
      operationId: AdminLocalsController.Create new local
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: body
        name: local
        description: New Local
        required: true
        schema:
          $ref: '#/definitions/models.Local'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Local'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      tags:
      - admin
      description: Remove local by id (role admin required)
      operationId: AdminLocalsController.Delete Local
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: local_id
        description: Local id
        required: true
        type: string
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    patch:
      tags:
      - admin
      description: Edit local (role admin required)
      operationId: AdminLocalsController.Update Local
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: local_id
        description: Local id
        required: true
        type: integer
        format: int64
      - in: body
        name: local
        description: Edited Local
        required: true
        schema:
          $ref: '#/definitions/models.Local'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Local'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/local/admins:
    get:
      tags:
      - admin
      description: Delete user from admins by id (role admin required)
      operationId: AdminLocalsController.Get Admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: local_id
        description: Local id
        required: true
        type: string
      responses:
        "200":
          description: '{[]models.UserPublicInfo}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    put:
      tags:
      - admin
      description: Delete user from admins by id (role admin required)
      operationId: AdminLocalsController.Delete User from Admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: local_id
        description: Local id
        required: true
        type: integer
        format: int64
      - in: query
        name: user_id
        description: User id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      tags:
      - admin
      description: Delete user from admins by id (role admin required)
      operationId: AdminLocalsController.Delete User from Admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: local_id
        description: Local id
        required: true
        type: string
      - in: query
        name: user_id
        description: User id
        required: true
        type: string
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/locals:
    get:
      tags:
      - admin
      description: Get locals list (role admin required)
      operationId: AdminLocalsController.Get Locals List
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: sortorder
        description: asc or desc
        type: string
      - in: query
        name: enable_to_reserve
        description: Local Property (true o false)
        type: string
      - in: query
        name: area_id
        description: Local Property
        type: integer
        format: int64
      - in: query
        name: search
        description: Search in name
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Local'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/reservations:
    get:
      tags:
      - admin
      description: Get reservations list (role admin required)
      operationId: AdminReservationsController.Get Reservations List
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: sortorder
        description: asc or desc
        type: string
      - in: query
        name: local_id
        description: Reservation Property
        type: integer
        format: int64
      - in: query
        name: user_id
        description: Reservation Property
        type: integer
        format: int64
      - in: query
        name: search_in_activity_name
        description: Search in activity name
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Reservation'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/user:
    get:
      tags:
      - admin
      description: Get user info by id (role admin required)
      operationId: AdminUsersController.Get User Info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: id
        description: User id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/.User'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    patch:
      tags:
      - admin
      description: Edit rol and enable properties (role admin required, user can't
        edit itself)
      operationId: AdminUsersController.Edit User
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: path
        name: id
        description: User id
        required: true
        type: integer
        format: int64
      - in: body
        name: userEdit
        description: Edited User
        required: true
        schema:
          $ref: '#/definitions/admin_controllers.UserEdit'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/.User'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/users:
    get:
      tags:
      - admin
      description: Get users list (role admin required, user can't edit itself)
      operationId: AdminUsersController.Get Users List
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: sortorder
        description: asc or desc
        type: string
      - in: query
        name: search
        description: Filter by username
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/.User'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /private/logout:
    delete:
      tags:
      - private
      summary: Logout
      description: Close session of the user in the system
      operationId: LogoutController.Logout
      parameters:
      - in: header
        name: authHd
        description: Authorized Token
        required: true
        type: string
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /private/profile:
    get:
      tags:
      - private
      description: Get user profile by username
      operationId: ProfileController.Get User Profile
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/.Profile'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    patch:
      tags:
      - private
      description: Edit profile
      operationId: ProfileController.Edit Profile
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: body
        name: profile
        description: Edited Profile
        required: true
        schema:
          $ref: '#/definitions/.ProfileEdit'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/.Profile'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/area:
    get:
      tags:
      - public
      description: Get area info by id
      operationId: PublicAreasController.Retrieve public area info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: area_id
        description: Area id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Area'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/areas:
    get:
      tags:
      - public
      description: Get public areas list
      operationId: PublicAreasController.Get public areas list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: orderDirection
        description: asc or desc
        type: string
      - in: query
        name: search
        description: Search in name
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Area'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/local:
    get:
      tags:
      - public
      description: Get local info by id
      operationId: PublicLocalsController.Retrieve public local info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: local_id
        description: Local id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Local'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/locals:
    get:
      tags:
      - public
      description: Get public locals list
      operationId: PublicLocalsController.Get public locals list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: sortorder
        description: asc or desc
        type: string
      - in: query
        name: area_id
        description: Local Property
        type: integer
        format: int64
      - in: query
        name: search
        description: Search in name
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Local'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/login:
    post:
      tags:
      - public
      summary: Login
      description: Open session for user into the system
      operationId: LoginController.Login
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: credentials
        description: Credentials for authentication
        required: true
        schema:
          $ref: '#/definitions/public_controllers.Credentials'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/public_controllers.Session'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /public/reservation:
    get:
      tags:
      - public
      description: Get reservation info by id
      operationId: PublicReservationsController.Retrieve public reservation info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: id
        description: Reservation id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Reservation'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/users/usernames:
    get:
      tags:
      - public
      description: Get usernames list
      operationId: PublicUsersController.Get usernames list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: prefixFilter
        description: prefixFilter
        required: true
        type: string
      - in: query
        name: limit
        description: Limit
        required: true
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/.UserOnlyUsernamesAndId'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /test/area:
    get:
      tags:
      - test
      description: Get area
      operationId: TestingModel2Controller.Retrieve Area list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: area_id
        description: area id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models2.Area'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    post:
      tags:
      - test
      description: Create area
      operationId: TestingModel2Controller.Create Area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: area
        description: Area
        required: true
        schema:
          $ref: '#/definitions/models2.Area'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models2.Area'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      tags:
      - test
      description: Delete area
      operationId: TestingModel2Controller.Delete Area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: area_id
        description: area id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    patch:
      tags:
      - test
      description: Update area
      operationId: TestingModel2Controller.Update Area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: area
        description: Area
        required: true
        schema:
          $ref: '#/definitions/models2.Area'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models2.Area'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
definitions:
  .0xc420357420:
    type: object
  .0xc4203574e0:
    type: object
  .DB:
    type: object
  .Ormer:
    type: object
  .Profile:
    type: object
  .ProfileEdit:
    type: object
  .User:
    type: object
  .UserOnlyUsernamesAndId:
    type: object
  admin_controllers.UserEdit:
    title: UserEdit
    type: object
    properties:
      enable:
        type: boolean
      rol:
        type: string
  models.Area:
    title: Area
    type: object
    properties:
      description:
        type: string
      id:
        type: integer
        format: int64
      location:
        type: string
      name:
        type: string
  models.Local:
    title: Local
    type: object
    properties:
      area_id:
        type: integer
        format: int64
      description:
        type: string
      enable_to_reserve:
        type: boolean
      id:
        type: integer
        format: int64
      location:
        type: string
      name:
        type: string
      working_begin_time_hours:
        type: integer
        format: int64
      working_begin_time_minutes:
        type: integer
        format: int64
      working_end_time_hours:
        type: integer
        format: int64
      working_end_time_minutes:
        type: integer
        format: int64
      working_months:
        type: string
      working_week_days:
        type: string
  models.Reservation:
    title: Reservation
    type: object
    properties:
      activity_description:
        type: string
      activity_name:
        type: string
      begin_time:
        type: string
        format: datetime
      confirmed:
        type: boolean
      end_time:
        type: string
        format: datetime
      id:
        type: integer
        format: int64
      local_id:
        type: integer
        format: int64
      pending:
        type: boolean
      user_id:
        type: integer
        format: int64
  models2.Area:
    title: Area
    type: object
    properties:
      admins:
        $ref: '#/definitions/3266.<nil>.0xc4203574e0'
      description:
        type: string
      id:
        type: integer
        format: int64
      locals:
        $ref: '#/definitions/3222.<nil>.0xc420357420'
      locatiion:
        type: string
      lzLoadAdmins:
        type: boolean
      lzLoadLocals:
        type: boolean
      model:
        $ref: '#/definitions/models2.model'
      name:
        type: string
  models2.model:
    title: model
    type: object
    properties:
      db:
        $ref: '#/definitions/sql.DB'
  public_controllers.Credentials:
    title: Credentials
    type: object
    properties:
      pass:
        type: string
      user:
        type: string
  public_controllers.Session:
    title: Session
    type: object
    properties:
      jwtToken:
        type: string
      rol:
        type: string
      username:
        type: string
