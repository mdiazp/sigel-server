swagger: "2.0"
info:
  title: api-sirel
  description: Documentation for api-sirel
  version: 1.0.0
  contact:
    email: di@upr.edu.cu
  license:
    name: UPR
basePath: /api
paths:
  /admin/area:
    get:
      tags:
      - admin
      description: Get area info by id (role admin required)
      operationId: AreasController.Retrieve Area Info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: area_id
        description: Area id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AreaInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    post:
      tags:
      - admin
      description: Create new area (role admin required)
      operationId: AreasController.Create new area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: body
        name: area
        description: New Area
        required: true
        schema:
          $ref: '#/definitions/models.AreaInfo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AreaInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      tags:
      - admin
      description: Remove area by id (role admin required)
      operationId: AreasController.Delete Area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: area_id
        description: Area id
        required: true
        type: string
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    patch:
      tags:
      - admin
      description: Edit area (role admin required)
      operationId: AreasController.Update Area
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: area_id
        description: Area id
        required: true
        type: integer
        format: int64
      - in: body
        name: area
        description: Edited Area
        required: true
        schema:
          $ref: '#/definitions/models.AreaInfo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AreaInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/areas:
    get:
      tags:
      - admin
      description: Get areas list (role admin required)
      operationId: AreasController.Get Areas List
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: desc
        description: true or false
        type: string
      - in: query
        name: search
        description: Search in name
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.AreaInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/local:
    get:
      tags:
      - admin
      description: Get local info by id (role admin required)
      operationId: LocalsController.Retrieve Local Info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: local_id
        description: Local id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.LocalInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    post:
      tags:
      - admin
      description: Create new local (role admin required)
      operationId: LocalsController.Create new local
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: body
        name: local
        description: New Local
        required: true
        schema:
          $ref: '#/definitions/models.LocalInfo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.LocalInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      tags:
      - admin
      description: Remove local by id (role admin required)
      operationId: LocalsController.Delete Local
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: local_id
        description: Local id
        required: true
        type: string
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    patch:
      tags:
      - admin
      description: Edit local (role admin required)
      operationId: LocalsController.Update Local
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: local_id
        description: Local id
        required: true
        type: integer
        format: int64
      - in: body
        name: local
        description: Edited Local
        required: true
        schema:
          $ref: '#/definitions/controllers.EditLocalInfo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.LocalInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/local/admins:
    get:
      tags:
      - admin
      description: Delete user from admins by id (role admin required)
      operationId: LocalsController.Get Admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: local_id
        description: Local id
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.UserPublicInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    put:
      tags:
      - admin
      description: Delete user from admins by id (role admin required)
      operationId: LocalsController.Add User to Admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: local_id
        description: Local id
        required: true
        type: integer
        format: int64
      - in: query
        name: user_id
        description: User id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      tags:
      - admin
      description: Delete user from admins by id (role admin required)
      operationId: LocalsController.Delete User from Admins
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: local_id
        description: Local id
        required: true
        type: string
      - in: query
        name: user_id
        description: User id
        required: true
        type: string
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/locals:
    get:
      tags:
      - admin
      description: Get locals list (role admin required)
      operationId: LocalsController.Get Locals List
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: desc
        description: true or false
        type: string
      - in: query
        name: enable_to_reserve
        description: Local Property (true o false)
        type: string
      - in: query
        name: area_id
        description: Local Property
        type: integer
        format: int64
      - in: query
        name: search
        description: Search in name
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.LocalInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/notification:
    get:
      tags:
      - admin
      description: Get notification by username
      operationId: NotificationsController.Get Notification
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: notification_id
        description: Notification ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/.NotificationInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/notifications:
    get:
      tags:
      - admin
      description: Get notification by username
      operationId: NotificationsController.Get Notifications
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: desc
        description: true or false
        type: string
      - in: query
        name: user_id
        description: Notification ID
        required: true
        type: integer
        format: int64
      - in: query
        name: date
        description: yyyy-mm-dd
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/.NotificationInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/reservation:
    get:
      tags:
      - admin
      description: Get reservation's info by id
      operationId: ReservationsController.Retrieve reservation info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: reservation_id
        description: Reservation id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ReservationInfo'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    delete:
      tags:
      - admin
      description: Refuse reservation and delete it
      operationId: ReservationsController.Refuse reservation
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: reservation_id
        description: Reservation id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    patch:
      tags:
      - admin
      description: Accept reservation, pending will be false
      operationId: ReservationsController.Accept reservation
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: reservation_id
        description: Reservation id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/reservations:
    get:
      tags:
      - admin
      description: Get public areas list
      operationId: ReservationsController.Get public reservation list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: desc
        description: true or false
        type: string
      - in: query
        name: user_id
        description: User ID
        type: integer
        format: int64
      - in: query
        name: local_id
        description: Local ID
        type: integer
        format: int64
      - in: query
        name: confirmed
        description: true or false
        type: string
      - in: query
        name: pending
        description: true or false
        type: string
      - in: query
        name: date
        description: yyyy-mm-dd
        type: string
      - in: query
        name: search
        description: Search in activity name
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.ReservationInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/reservations2:
    get:
      tags:
      - admin
      description: Get public areas list
      operationId: ReservationsController.Get public reservation list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: desc
        description: true or false
        type: string
      - in: query
        name: user_id
        description: User ID
        type: integer
        format: int64
      - in: query
        name: local_id
        description: Local ID
        type: integer
        format: int64
      - in: query
        name: confirmed
        description: true or false
        type: string
      - in: query
        name: pending
        description: true or false
        type: string
      - in: query
        name: date
        description: yyyy-mm-dd
        type: string
      - in: query
        name: search
        description: Search in activity name
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/controllers.ReservationWithusername'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/reservationscount:
    get:
      tags:
      - admin
      description: Get public reservations count
      operationId: ReservationsController.Get public reservations count
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: user_id
        description: User ID
        type: integer
        format: int64
      - in: query
        name: local_id
        description: Local ID
        type: integer
        format: int64
      - in: query
        name: confirmed
        description: true or false
        type: string
      - in: query
        name: pending
        description: true or false
        type: string
      - in: query
        name: date
        description: yyyy-mm-dd
        type: string
      - in: query
        name: search
        description: Search in activity name
        type: string
      responses:
        "200":
          description: int
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/user:
    get:
      tags:
      - admin
      description: Get user info by id (role admin required)
      operationId: UsersController.Get User Info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: user_id
        description: User id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    patch:
      tags:
      - admin
      description: Edit rol and enable properties (role admin required, user can't
        edit itself)
      operationId: UsersController.Edit User
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: user_id
        description: User id
        required: true
        type: integer
        format: int64
      - in: body
        name: userEdit
        description: Edited User
        required: true
        schema:
          $ref: '#/definitions/models.UserEdit'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /admin/users:
    get:
      tags:
      - admin
      description: Get users list (role admin required, user can't edit itself)
      operationId: UsersController.Get Users List
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: username
        description: Prefix username
        type: string
      - in: query
        name: name
        description: search in Name
        type: string
      - in: query
        name: email
        description: search in email
        type: string
      - in: query
        name: rol
        description: Rol
        type: string
      - in: query
        name: enable
        description: enable (true or false)
        type: string
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: desc
        description: true or false
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.UserInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /private/session/logout:
    delete:
      tags:
      - private
      summary: Logout
      description: Close session of the user in the system
      operationId: LogoutController.Logout
      parameters:
      - in: header
        name: authHd
        description: Authorized Token
        required: true
        type: string
      responses:
        "200":
          description: '{string}'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /private/session/notification:
    get:
      tags:
      - private
      description: Get notification by username
      operationId: NotificationsController.Get Notification
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: notification_id
        description: Notification ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/.Notification'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /private/session/notifications:
    get:
      tags:
      - private
      description: Get notification by username
      operationId: NotificationsController.Get Notifications
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: desc
        description: true or false
        type: string
      - in: query
        name: readed
        description: (true or false)
        type: string
      - in: query
        name: date
        description: yyyy-mm-dd
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/.Notification'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /private/session/notificationscount:
    get:
      tags:
      - private
      description: Get notification by username
      operationId: NotificationsController.Get Notifications
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: readed
        description: (true or false)
        type: string
      - in: query
        name: date
        description: yyyy-mm-dd
        type: string
      responses:
        "200":
          description: int
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /private/session/profile:
    get:
      tags:
      - private
      description: Get user profile by username
      operationId: ProfileController.Get User Profile
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserProfile'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    patch:
      tags:
      - private
      description: Edit profile
      operationId: ProfileController.Edit Profile
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: body
        name: profile
        description: Edited Profile
        required: true
        schema:
          $ref: '#/definitions/models.ProfileEdit'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserProfile'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /private/session/readallnotifications:
    patch:
      tags:
      - private
      description: Set all user's notifications as readed
      operationId: NotificationsController.Set all user's notifications as readed
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /private/session/readnotification:
    patch:
      tags:
      - private
      description: Read Notification
      operationId: NotificationsController.Read Notification
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /private/session/reservation:
    post:
      tags:
      - private
      description: Create new reservation (role user required)
      operationId: ReservationsController.Create new reservation
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: body
        name: reservation
        description: New Reservation
        required: true
        schema:
          $ref: '#/definitions/controllers.ReservationToCreate'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ReservationInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
    patch:
      tags:
      - private
      description: Confirm reservation (role user required)
      operationId: ReservationsController.Confirm reservation
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: authHd
        description: Authentication token
        required: true
        type: string
      - in: query
        name: reservationID
        description: Reservation ID
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ReservationInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /private/session/reservations:
    get:
      tags:
      - private
      description: Get user's reservations list
      operationId: ReservationsController.Get user's reservations list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: desc
        description: true or false
        type: string
      - in: query
        name: user_id
        description: User ID
        type: integer
        format: int64
      - in: query
        name: local_id
        description: Local ID
        type: integer
        format: int64
      - in: query
        name: confirmed
        description: true or false
        type: string
      - in: query
        name: pending
        description: true or false
        type: string
      - in: query
        name: date
        description: yyyy-mm-dd
        type: string
      - in: query
        name: not_before_date
        description: yyyy-mm-dd
        type: string
      - in: query
        name: search
        description: Search in activity name
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.ReservationInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/area:
    get:
      tags:
      - public
      description: Get area info by id
      operationId: AreasController.Retrieve public area info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: area_id
        description: Area id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AreaInfo'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/areas:
    get:
      tags:
      - public
      description: Get public areas list
      operationId: AreasController.Get public areas list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: desc
        description: true or false
        type: string
      - in: query
        name: search
        description: Search in name
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.AreaInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/local:
    get:
      tags:
      - public
      description: Get local info by id
      operationId: LocalsController.Retrieve public local info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: local_id
        description: Local id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.LocalInfo'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/locals:
    get:
      tags:
      - public
      description: Get public locals list
      operationId: LocalsController.Get public locals list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: desc
        description: true or false
        type: string
      - in: query
        name: area_id
        description: Local Property
        type: integer
        format: int64
      - in: query
        name: search
        description: Search in name
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.LocalInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/login:
    post:
      tags:
      - public
      summary: Login
      description: Open session for user into the system
      operationId: LoginController.Login
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: credentials
        description: Credentials for authentication
        required: true
        schema:
          $ref: '#/definitions/public.Credentials'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/public.Session'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
  /public/reservation:
    get:
      tags:
      - public
      description: Get reservation's info by id
      operationId: ReservationsController.Retrieve public area info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: reservation_id
        description: Reservation id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ReservationInfo'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/reservations:
    get:
      tags:
      - public
      description: Get public areas list
      operationId: ReservationsController.Get public reservation list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: desc
        description: true or false
        type: string
      - in: query
        name: user_id
        description: User ID
        type: integer
        format: int64
      - in: query
        name: local_id
        description: Local ID
        type: integer
        format: int64
      - in: query
        name: confirmed
        description: true or false
        type: string
      - in: query
        name: pending
        description: true or false
        type: string
      - in: query
        name: date
        description: yyyy-mm-dd
        type: string
      - in: query
        name: search
        description: Search in activity name
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.ReservationInfo'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/servertime:
    get:
      tags:
      - public
      description: Get server time info
      operationId: InfoController.Retrieve serve time info
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: ""
          schema:
            format: datetime
            type: string
        "500":
          description: Internal Server Error
  /public/user/publicinfo:
    get:
      tags:
      - public
      description: Get user's public info
      operationId: UsersController.Get user's public info
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: user_id
        description: User ID
        type: integer
        format: int64
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UserPublicInfo'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
  /public/users/publicinfo:
    get:
      tags:
      - public
      description: Get user's public info list
      operationId: UsersController.Get usernames list
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: username
        description: prefixFilter
        type: string
      - in: query
        name: limit
        description: Limit (10 or 50 or 100)
        type: integer
        format: int64
      - in: query
        name: offset
        description: Offset
        type: integer
        format: int64
      - in: query
        name: orderby
        description: OrderBy (property name)
        type: string
      - in: query
        name: desc
        description: true or false
        type: string
      responses:
        "200":
          description: ""
          schema:
            type: array
            items:
              $ref: '#/definitions/models.UserPublicInfo'
        "400":
          description: Bad request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
definitions:
  .0xc42032e380:
    type: object
  .0xc4203665c0:
    type: object
  .0xc420342700:
    type: object
  .0xc420366520:
    type: object
  .Notification:
    type: object
  .NotificationInfo:
    type: object
  controllers.EditLocalInfo:
    title: EditLocalInfo
    type: object
    properties:
      Description:
        type: string
      EnableToReserve:
        type: boolean
      ID:
        type: integer
        format: int64
      Location:
        type: string
      Name:
        type: string
      WorkingBeginTimeHours:
        type: integer
        format: int64
      WorkingBeginTimeMinutes:
        type: integer
        format: int64
      WorkingEndTimeHours:
        type: integer
        format: int64
      WorkingEndTimeMinutes:
        type: integer
        format: int64
      WorkingMonths:
        type: string
      WorkingWeekDays:
        type: string
  controllers.ReservationToCreate:
    title: ReservationToCreate
    type: object
    properties:
      ActivityDescription:
        type: string
      ActivityName:
        type: string
      BeginTime:
        type: string
        format: datetime
      EndTime:
        type: string
        format: datetime
      LocalID:
        type: integer
        format: int64
  controllers.ReservationWithusername:
    title: ReservationWithusername
    type: object
    properties:
      Username:
        type: string
  models.Area:
    title: Area
    type: object
    properties:
      Description:
        type: string
      ID:
        type: integer
        format: int64
      Location:
        type: string
      Name:
        type: string
      locals:
        $ref: '#/definitions/13083.<nil>.0xc420342700'
      model:
        $ref: '#/definitions/models.Model'
  models.AreaInfo:
    title: AreaInfo
    type: object
    properties:
      Description:
        type: string
      ID:
        type: integer
        format: int64
      Location:
        type: string
      Name:
        type: string
  models.Local:
    title: Local
    type: object
    properties:
      AreaID:
        type: integer
        format: int64
      Description:
        type: string
      EnableToReserve:
        type: boolean
      ID:
        type: integer
        format: int64
      Location:
        type: string
      Name:
        type: string
      WorkingBeginTimeHours:
        type: integer
        format: int64
      WorkingBeginTimeMinutes:
        type: integer
        format: int64
      WorkingEndTimeHours:
        type: integer
        format: int64
      WorkingEndTimeMinutes:
        type: integer
        format: int64
      WorkingMonths:
        type: string
      WorkingWeekDays:
        type: string
      area:
        $ref: '#/definitions/models.Area'
      localAdmins:
        $ref: '#/definitions/9273.<nil>.0xc42032e380'
      model:
        $ref: '#/definitions/models.Model'
  models.LocalInfo:
    title: LocalInfo
    type: object
    properties:
      AreaID:
        type: integer
        format: int64
      Description:
        type: string
      EnableToReserve:
        type: boolean
      ID:
        type: integer
        format: int64
      Location:
        type: string
      Name:
        type: string
      WorkingBeginTimeHours:
        type: integer
        format: int64
      WorkingBeginTimeMinutes:
        type: integer
        format: int64
      WorkingEndTimeHours:
        type: integer
        format: int64
      WorkingEndTimeMinutes:
        type: integer
        format: int64
      WorkingMonths:
        type: string
      WorkingWeekDays:
        type: string
  models.Model:
    type: object
  models.ProfileEdit:
    title: ProfileEdit
    type: object
    properties:
      Email:
        type: string
      SendNotificationsToEmail:
        type: boolean
  models.Reservation:
    title: Reservation
    type: object
    properties:
      ActivityDescription:
        type: string
      ActivityName:
        type: string
      BeginTime:
        type: string
        format: datetime
      Confirmed:
        type: boolean
      EndTime:
        type: string
        format: datetime
      ID:
        type: integer
        format: int64
      LocalID:
        type: integer
        format: int64
      Pending:
        type: boolean
      UserID:
        type: integer
        format: int64
      local:
        $ref: '#/definitions/models.Local'
      model:
        $ref: '#/definitions/models.Model'
      user:
        $ref: '#/definitions/models.User'
  models.ReservationInfo:
    title: ReservationInfo
    type: object
    properties:
      ActivityDescription:
        type: string
      ActivityName:
        type: string
      BeginTime:
        type: string
        format: datetime
      Confirmed:
        type: boolean
      EndTime:
        type: string
        format: datetime
      ID:
        type: integer
        format: int64
      LocalID:
        type: integer
        format: int64
      Pending:
        type: boolean
      UserID:
        type: integer
        format: int64
  models.User:
    title: User
    type: object
    properties:
      Email:
        type: string
      Enable:
        type: boolean
      ID:
        type: integer
        format: int64
      Name:
        type: string
      Rol:
        type: string
      SendNotificationsToEmail:
        type: boolean
      Username:
        type: string
      localAdmins:
        $ref: '#/definitions/22374.<nil>.0xc420366520'
      model:
        $ref: '#/definitions/models.Model'
      notifications:
        $ref: '#/definitions/22404.<nil>.0xc4203665c0'
  models.UserEdit:
    title: UserEdit
    type: object
    properties:
      Enable:
        type: boolean
      Rol:
        type: string
  models.UserInfo:
    title: UserInfo
    type: object
    properties:
      Email:
        type: string
      Enable:
        type: boolean
      ID:
        type: integer
        format: int64
      Name:
        type: string
      Rol:
        type: string
      SendNotificationsToEmail:
        type: boolean
      Username:
        type: string
  models.UserProfile:
    title: UserProfile
    type: object
    properties:
      Email:
        type: string
      ID:
        type: integer
        format: int64
      Name:
        type: string
      SendNotificationsToEmail:
        type: boolean
      Username:
        type: string
  models.UserPublicInfo:
    title: UserPublicInfo
    type: object
    properties:
      ID:
        type: integer
        format: int64
      Name:
        type: string
      Username:
        type: string
  public.Credentials:
    title: Credentials
    type: object
    properties:
      pass:
        type: string
      user:
        type: string
  public.Session:
    title: Session
    type: object
    properties:
      jwtToken:
        type: string
      rol:
        type: string
      userID:
        type: integer
        format: int64
      username:
        type: string
tags:
- name: public
  description: |
    InfoController ...
- name: private
  description: |
    NotificationsController ...
- name: admin
  description: |
    NotificationsController ...
